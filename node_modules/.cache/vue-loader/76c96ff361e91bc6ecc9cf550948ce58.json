{"remainingRequest":"/Users/pankajsakariya/Desktop/brijesh/convergence/Convergencefinal/convergenceharrypotter/convergence2k19/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pankajsakariya/Desktop/brijesh/convergence/Convergencefinal/convergenceharrypotter/convergence2k19/src/views/Main.vue?vue&type=style&index=0&id=c1f1971a&scoped=true&lang=sass&","dependencies":[{"path":"/Users/pankajsakariya/Desktop/brijesh/convergence/Convergencefinal/convergenceharrypotter/convergence2k19/src/views/Main.vue","mtime":1559133572674},{"path":"/Users/pankajsakariya/Desktop/brijesh/convergence/Convergencefinal/convergenceharrypotter/convergence2k19/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/pankajsakariya/Desktop/brijesh/convergence/Convergencefinal/convergenceharrypotter/convergence2k19/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/pankajsakariya/Desktop/brijesh/convergence/Convergencefinal/convergenceharrypotter/convergence2k19/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/pankajsakariya/Desktop/brijesh/convergence/Convergencefinal/convergenceharrypotter/convergence2k19/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/pankajsakariya/Desktop/brijesh/convergence/Convergencefinal/convergenceharrypotter/convergence2k19/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pankajsakariya/Desktop/brijesh/convergence/Convergencefinal/convergenceharrypotter/convergence2k19/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import ../sass/main\n@font-face\n  font-family: 'dumbledore'\n  src: url(\"../assets/dum1.ttf\")\n\n/*.coming-soon\n    position: absolute\n    top: 50px\n    left: 50%\n    z-index: 3\n    transform: translateX(-50%)\n    color: black\n    text-align: center\n    font-family: dumbledore, sans-serif\n    font-size: 72px\n    .letter\n        display: inline-block !important*/\n",{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoOA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div id=\"main\">\n        <section>\n            <div id=\"landing\">\n                <div class=\"pin-scene\">\n                    <div class=\"bird-container bird-container--one\">\n                        <div class=\"bird bird--one\"></div>\n                    </div>\n\n                    <div class=\"bird-container bird-container--two\">\n                        <div class=\"bird bird--two\"></div>\n                    </div>\n\n                    <div class=\"bird-container bird-container--three\">\n                        <div class=\"bird bird--three\"></div>\n                    </div>\n\n                    <div class=\"bird-container bird-container--four\">\n                        <div class=\"bird bird--four\"></div>\n                    </div>\n\n                    <div class=\"bg-image\"></div>\n                    <div class=\"udaan-logo\">\n                        <img src=\"../assets/brijeshlogo.png\" alt=\"udaanLogo\" class=\"img-fluid\">\n                    </div>\n                    <div class=\"mouse\">\n                        <div class=\"mouse-icon\">\n                            <span class=\"mouse-wheel\"></span>\n                        </div>\n                    </div>\n\n\n\n                    <!--<div class=\"quidditch-ball\"></div> -->\n                    <!--<div class=\"demantadors\">-->\n                    <!--<div class=\"demantador\">-->\n                    <!--<ul>-->\n                    <!--<li></li>-->\n                    <!--<li></li>-->\n                    <!--<li></li>-->\n                    <!--<li></li>-->\n                    <!--</ul>-->\n                    <!--</div>-->\n                    <!--</div>-->\n                    <!--<div class=\"coming-soon\">Coming soon</div> -->\n\n\n\n\n                </div>\n            </div>\n        </section>\n        <section>\n            <div id=\"about\">\n                <aboutComponent class=\"aboutComponent\"></aboutComponent>\n                <div class=\"particles\">\n                    <div class=\"particle\" v-for=\"n in 50\"></div>\n                </div>\n            </div>\n        </section>\n        <section>\n            <mapComponent></mapComponent>\n        </section>\n    </div>\n</template>\n\n<script>\n  import aboutComponent from '../components/aboutComponent'\n  import mapComponent from '../components/mapComponent'\n\n\n\n\n  export default {\n    name: \"Main\",\n    components: {\n      aboutComponent,\n      mapComponent,\n    },\n    mounted() {\n\n\n\n      //    COMING SOON ANIMATION\n\n\n\n      /*let t2 = new this.$gsap.TimelineMax({\n        repeat: -1,\n        yoyo: true\n      })\n\n      let line = document.querySelector('.coming-soon')\n      let letters = line.innerHTML.split(\"\")\n      let blockLetters = []\n      letters.forEach((letter) => {\n        if(letter === \" \")\n          blockLetters.push(\"<div class=\\\"letter\\\">&thinsp;</div>\")\n        else\n          blockLetters.push(\"<div class=\\\"letter\\\">\" + letter + \"</div>\")\n      })\n      line.innerHTML = blockLetters.join(\"\")\n\n      document.querySelectorAll(\".letter\").forEach(function(el) {\n        el.style.display = \"inline-block\"\n      })\n\n      t2.staggerTo(\".letter\", 1.5, {\n        scale: 1.2,\n        y: -10\n      }, 0.1)\n\n      t2.staggerTo(\".letter\", 1, {\n        scale: 1,\n        y: 0\n      }, 0.1, 0)\n*/\n\n\n      //LANDING COMPONENT ANIMATIONS\n      let t1 = new this.$gsap.TimelineMax()\n      t1.from('.bg-image', 0.5, {\n        scale: 1.5,\n        autoAlpha: 0,\n        ease: Power1.easeOut\n      })\n\n      let controller = new this.$scrollmagic.Controller()\n\n      //LANDING COMPONENT SCROLL\n      let landingScrollTl = new this.$gsap.TimelineMax().add([\n        TweenMax.to('#landing .heading', 4, {\n          autoAlpha: 0,\n          scale: 2,\n          y: 100\n        }),\n        TweenMax.to('.bg-image, .coming-soon', 4, {\n          scale: 1.5\n        }),\n        TweenMax.to('.demantador', 4, {\n          x: 100,\n          scale: 0.5,\n          autoAlpha: 0\n        }),\n        TweenMax.to('.udaan-logo, .mouse', 4, {\n          y: -50,\n          scale: 0.5,\n          autoAlpha: 0\n        })\n      ])\n\n      let scrollLanding = new this.$scrollmagic.Scene({\n        triggerElement: '.pin-scene',\n        triggerHook: 0,\n        duration: '110%'\n      })\n        .setTween(landingScrollTl)\n        .setPin('.pin-scene')\n        .addTo(controller)\n\n      //  ABOUT COMPONENT SCROLL\n\n      let aboutScrollTl = new this.$gsap.TimelineMax().add([\n        TweenMax.to('.bg-image', 4, {\n          autoAlpha: 0\n        }),\n        TweenMax.staggerTo('.particle', 16, {\n          cycle: {\n            x: function (i) {\n              if (i % 2 === 0)\n                return (Math.random() * (-400) + 1)\n              else\n                return (Math.random() * (400) + 1)\n            },\n            y: function (i) {\n              if (i % 2 === 0)\n                return (Math.random() * (-400) + 1)\n              else\n                return (Math.random() * (400) + 1)\n            },\n            scale: function () {\n              return Math.random() * 5\n            },\n            rotation: function () {\n              return Math.random() * 360\n            },\n            backgroundColor: function () {\n              return 'rgba(' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ')'\n            }\n          },\n          autoAlpha: 0,\n          display: \"none\"\n        }, 0.4),\n        TweenMax.from('#about', 4, {\n          autoAlpha: 0\n        }),\n        TweenMax.from('.aboutComponent', 8, {\n          autoAlpha: 0\n        }),\n        TweenMax.from('.title, .sub-title, .center-headline, .footer-headline', 8, {\n          scale: 0\n        }),\n        TweenMax.from('.article', 8, {\n          scaleY: 0\n        }, \"+=2\"),\n        TweenMax.from('.center-gif', 8, {\n          autoAlpha: 0,\n          y: 100\n        }),\n        TweenMax.staggerFrom('.social-icon', 8, {\n          scale: 0\n        }, 2)\n      ])\n\n      let scrollAbout = new this.$scrollmagic.Scene({\n        triggerHook: 0,\n        triggerElement: '#about',\n        duration: '50%'\n      })\n        .setTween(aboutScrollTl)\n        .setPin('#about')\n        .addTo(controller)\n\n    }\n  }\n</script>\n\n<style scoped lang=\"sass\">\n  @import ../sass/main\n  @font-face\n    font-family: 'dumbledore'\n    src: url(\"../assets/dum1.ttf\")\n\n  /*.coming-soon\n      position: absolute\n      top: 50px\n      left: 50%\n      z-index: 3\n      transform: translateX(-50%)\n      color: black\n      text-align: center\n      font-family: dumbledore, sans-serif\n      font-size: 72px\n      .letter\n          display: inline-block !important*/\n</style>"]}]}